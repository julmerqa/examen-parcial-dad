<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<!-- Define el proyecto padre: Spring Boot Starter Parent -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.1.3</version> <!-- Versión de Spring Boot -->
		<relativePath/> <!-- Usa el parent desde el repositorio central -->
	</parent>

	<!-- Información del proyecto -->
	<groupId>fr.com</groupId>
	<artifactId>ms-producto</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>ms-producto</name>
	<description>auth</description>

	<!-- Configuración de propiedades -->
	<properties>
		<java.version>17</java.version> <!-- Versión de Java utilizada -->
		<spring-cloud.version>2022.0.2</spring-cloud.version> <!-- Versión de Spring Cloud -->
	</properties>

	<!-- Dependencias necesarias -->
	<dependencies>

		<!-- Starter para Spring Data JPA: permite manejar persistencia con Hibernate -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- Starter para Spring Web: añade soporte para aplicaciones REST -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- Driver para conexión con bases de datos MySQL -->
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<scope>runtime</scope> <!-- Solo se usa en tiempo de ejecución -->
		</dependency>

		<!-- Lombok: herramienta para reducir código boilerplate como getters y setters -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional> <!-- Lombok no es necesario para construir el artefacto -->
		</dependency>

		<!-- Starter de Spring Boot para pruebas -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope> <!-- Solo se utiliza en pruebas -->
		</dependency>

		<!-- Springdoc OpenAPI: para generar documentación Swagger de la API -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>2.0.2</version>
		</dependency>

		<!-- Validación: permite realizar validaciones en los modelos de datos -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
			<version>3.2.3</version>
		</dependency>

		<!-- Cliente de Spring Cloud Config para configuraciones centralizadas -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>

		<!-- Cliente Eureka para descubrimiento de servicios -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
			<version>4.0.3</version>
		</dependency>

		<!-- Spring Cloud OpenFeign: librería declarativa para llamadas HTTP entre microservicios -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>

		<!-- Resilience4j: para patrones de resiliencia como circuit breakers y reintentos -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-circuitbreaker-resilience4j</artifactId>
		</dependency>

	</dependencies>

	<!-- Gestión de dependencias centralizada -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope> <!-- Importa las versiones desde spring-cloud-dependencies -->
			</dependency>
		</dependencies>
	</dependencyManagement>

	<!-- Configuración de construcción del proyecto -->
	<build>
		<plugins>
			<!-- Plugin Maven para construir aplicaciones Spring Boot -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<!-- Excluye Lombok del artefacto final -->
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>